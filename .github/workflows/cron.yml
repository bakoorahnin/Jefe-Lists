# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # schedule on a cron job
  schedule:
    - cron: "0 1 * * *"
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            ~/cache
            !~/cache/exclude
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install # will run `yarn install` command
      - uses: borales/actions-yarn@v2.0.0

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          yarn hostlist-compiler -c allow_configuration.json -o allowlist.txt,
          yarn hostlist-compiler -c block_configuration.json -o blocklist.txt

      - name: switching from HTTPS to SSH
        run: git remote set-url origin ${{ secrets.ssh }}
      - name: check for changes
        run: git status
      - name: stage changed files
        run: git add .
      - name: commit changed files
        run: git commit -m "Auto updating allowlist.txt and denylist.txt"
      - name: fetch from master
        run: git fetch origin master
      - name: push code to master
        run: git push origin HEAD:master

      # # Copy files to folder
      # - name: Copy files to folder
      #   run: |
      #     mkdir -p compiled
      #     cp -r allowlist.txt compiled/,
      #     cp -r blocklist.txt compiled/

      # - name: Copy blocklist
      #   uses: canastro/copy-file-action@master
      #   with:
      #     source: "blocklist.txt"
      #     target: "compiled/"

      # - name: Copy allowlist
      #   uses: canastro/copy-file-action@master
      #   with:
      #     source: "allowlist.txt"
      #     target: "compiled/"

      # - name: Deploy
      #   uses: s0/git-publish-subdir-action@master
      #   env:
      #     REPO: self
      #     FOLDER: /
      #     BRANCH: compiled
      #     GITHUB_TOKEN: ${{ secrets.ACTIONS_DEPLOY_ACCESS_TOKEN }}
      #     MESSAGE: "This updates the content to the commit {sha} that had the message:\n{msg}"
      #     SKIP_EMPTY_COMMITS: true
